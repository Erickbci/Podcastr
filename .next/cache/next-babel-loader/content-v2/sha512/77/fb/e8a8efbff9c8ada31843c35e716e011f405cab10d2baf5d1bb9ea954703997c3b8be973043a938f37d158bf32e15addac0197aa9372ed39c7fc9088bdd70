{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/erick/fsociety00.dat/nlw5/Podcastr/src/pages/episodes/[slug].tsx\",\n    _s = $RefreshSig$();\n\nimport Head from 'next/head';\nimport Image from 'next/image';\nimport Link from 'next/link';\nimport { usePlayer } from '../../contexts/PlayerContext';\nimport styles from './episode.module.scss';\nexport var __N_SSG = true;\nexport default function Episode(_ref) {\n  _s();\n\n  var episode = _ref.episode;\n\n  var _usePlayer = usePlayer(),\n      play = _usePlayer.play;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.episode,\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: [episode.title, \"| Podcastr\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.thumbnailContainer,\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        href: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/arrow-left.svg\",\n            alt: \"Voltar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Image, {\n        width: 700,\n        height: 160,\n        src: episode.thumbnail,\n        objectFit: \"cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: function onClick() {\n          return play(episode);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/play.svg\",\n          alt: \"Tocar epis\\xF3dio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: episode.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.members\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.publishedAt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.durationAsString\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.description,\n      dangerouslySetInnerHTML: {\n        __html: episode.description\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Episode, \"mptMREsNBTdRfLLVAN69g5qilFU=\", false, function () {\n  return [usePlayer];\n});\n\n_c = Episode;\n\nvar _c;\n\n$RefreshReg$(_c, \"Episode\");","map":{"version":3,"sources":["/home/erick/fsociety00.dat/nlw5/Podcastr/src/pages/episodes/[slug].tsx"],"names":["Head","Image","Link","usePlayer","styles","Episode","episode","play","title","thumbnailContainer","thumbnail","members","publishedAt","durationAsString","description","__html"],"mappings":";;;;;AAGA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,8BAA1B;AAKA,OAAOC,MAAP,MAAmB,uBAAnB;;AAkBA,eAAe,SAASC,OAAT,OAA4C;AAAA;;AAAA,MAAzBC,OAAyB,QAAzBA,OAAyB;;AAAA,mBAExCH,SAAS,EAF+B;AAAA,MAEjDI,IAFiD,cAEjDA,IAFiD;;AAIzD,sBACE;AAAK,IAAA,SAAS,EAAEH,MAAM,CAACE,OAAvB;AAAA,4BACE,QAAC,IAAD;AAAA,6BACE;AAAA,mBAAQA,OAAO,CAACE,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAEJ,MAAM,CAACK,kBAAvB;AAAA,8BAEE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC,GAAX;AAAA,+BACE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA,iCACE;AAAK,YAAA,GAAG,EAAC,iBAAT;AAA2B,YAAA,GAAG,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAQE,QAAC,KAAD;AACA,QAAA,KAAK,EAAE,GADP;AAEA,QAAA,MAAM,EAAE,GAFR;AAGA,QAAA,GAAG,EAAEH,OAAO,CAACI,SAHb;AAIA,QAAA,SAAS,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA,cARF,eAcE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE;AAAA,iBAAKH,IAAI,CAACD,OAAD,CAAT;AAAA,SAA/B;AAAA,+BACE;AAAK,UAAA,GAAG,EAAC,WAAT;AAAqB,UAAA,GAAG,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAuBA;AAAA,8BACE;AAAA,kBAAKA,OAAO,CAACE;AAAb;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAOF,OAAO,CAACK;AAAf;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,kBAAOL,OAAO,CAACM;AAAf;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA,kBAAON,OAAO,CAACO;AAAf;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBA,eA8BA;AACA,MAAA,SAAS,EAAET,MAAM,CAACU,WADlB;AAEA,MAAA,uBAAuB,EAAE;AAAEC,QAAAA,MAAM,EAAET,OAAO,CAACQ;AAAlB;AAFzB;AAAA;AAAA;AAAA;AAAA,YA9BA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD;;GAzCuBT,O;UAELF,S;;;KAFKE,O","sourcesContent":["import { format, parseISO } from 'date-fns';\nimport  ptBR  from 'date-fns/locale/pt-BR';\nimport { GetStaticPaths, GetStaticProps } from 'next';\nimport Head from 'next/head';\nimport Image from 'next/image';\nimport Link from 'next/link';\nimport { usePlayer } from '../../contexts/PlayerContext';\n\nimport { api } from '../../services/api';\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\n\nimport styles from './episode.module.scss'\n\ntype Episode = {\n  id: string;\n  title: string;\n  members: string;\n  thumbnail: string;\n  publishedAt:string;\n  durationAsString:string;\n  duration: number;\n  description: string;\n  url: string; \n}\n\ntype EpisodeProps = {\n  episode: Episode;\n}\n\nexport default function Episode({ episode }: EpisodeProps) {\n\n  const { play } = usePlayer()\n\n  return (\n    <div className={styles.episode}>\n      <Head>\n        <title>{episode.title}| Podcastr</title>\n      </Head>\n      <div className={styles.thumbnailContainer}>\n\n        <Link href=\"/\">\n          <button type=\"button\">\n            <img src=\"/arrow-left.svg\" alt=\"Voltar\"/>\n          </button>\n        </Link>\n\n        <Image\n        width={700}\n        height={160}\n        src={episode.thumbnail}\n        objectFit=\"cover\"/>\n\n        <button type=\"button\" onClick={() =>play(episode)}>\n          <img src=\"/play.svg\" alt=\"Tocar episÃ³dio\"/>\n        </button>\n      </div>\n\n    <header>\n      <h1>{episode.title}</h1>\n      <span>{episode.members}</span>\n      <span>{episode.publishedAt}</span>\n      <span>{episode.durationAsString}</span>\n    </header>\n\n    <div \n    className={styles.description} \n    dangerouslySetInnerHTML={{ __html: episode.description }} />\n      \n    </div>\n  )\n}\n\nexport const getStaticPaths: GetStaticPaths = async () => {\n\n  const { data } = await api.get('episodes', { \n    params: {\n      _limit: 2,\n      _sort: 'published_at',\n      _order: 'desc'\n    }\n  })\n\n  const paths = data.map(episode => {\n    return {\n      params: {\n        slug: episode.id\n      }\n    }\n  })\n\n  return {\n    paths, \n    fallback: 'blocking'\n  }\n}\nexport const getStaticProps: GetStaticProps = async (ctx) => {\n  const { slug } = ctx.params;\n\n  const { data } = await api.get(`/episodes/${slug}`)\n  \n  const episode = {\n    id: data.id,\n    title: data.title,\n    thumbnail: data.thumbnail,\n    members: data.members,\n    publishedAt: format(parseISO(data.published_at), 'd MMM yy', {locale: ptBR}),\n    durationAsString: convertDurationToTimeString(Number(data.file.duration)),\n    duration: Number(data.file.duration),\n    description: data.description,\n    url: data.file.url,\n  }\n\n  return {\n    props: {\n      episode,\n    },\n    revalidate: 60 * 60 * 24, //att 24 hours\n  }\n}"]},"metadata":{},"sourceType":"module"}