{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/erick/fsociety00.dat/nlw5/Podcastr/src/components/Player/index.tsx\",\n    _s = $RefreshSig$();\n\nimport Image from 'next/image';\nimport { useEffect, useRef, useState } from 'react';\nimport { usePlayer } from '../../contexts/PlayerContext';\nimport styles from './styles.module.scss';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\nexport function Player() {\n  _s();\n\n  var _episode$duration;\n\n  var audioRef = useRef(null);\n\n  var _useState = useState(0),\n      progress = _useState[0],\n      setProgress = _useState[1];\n\n  var _usePlayer = usePlayer(),\n      episodeList = _usePlayer.episodeList,\n      currentEpisodeIndex = _usePlayer.currentEpisodeIndex,\n      isPlaying = _usePlayer.isPlaying,\n      isLooping = _usePlayer.isLooping,\n      isShuffling = _usePlayer.isShuffling,\n      toggleShuffle = _usePlayer.toggleShuffle,\n      togglePlay = _usePlayer.togglePlay,\n      toggleLoop = _usePlayer.toggleLoop,\n      setPlayingState = _usePlayer.setPlayingState,\n      playNext = _usePlayer.playNext,\n      playPrevious = _usePlayer.playPrevious,\n      hasNext = _usePlayer.hasNext,\n      hasPrevious = _usePlayer.hasPrevious,\n      clearPlayerState = _usePlayer.clearPlayerState;\n\n  useEffect(function () {\n    if (!audioRef.current) {\n      return;\n    }\n\n    if (isPlaying) {\n      audioRef.current.play();\n    } else {\n      audioRef.current.pause();\n    }\n  }, [isPlaying]);\n  var episode = episodeList[currentEpisodeIndex];\n\n  function setProgressListener() {\n    audioRef.current.currentTime = 0;\n    audioRef.current.addEventListener('timeupdate', function () {\n      setProgress(Math.floor(audioRef.current.currentTime));\n    });\n  }\n\n  function handleSeek(amount) {\n    audioRef.current.currentTime = amount;\n    setProgress(amount);\n  }\n\n  function handleEpisodeEnded() {\n    if (hasNext) {\n      playNext();\n    } else {\n      clearPlayerState();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.playerContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/playing.svg\",\n        alt: \"Tocando agora\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Tocando agora\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), episode ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.currentEpisode,\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        width: 592,\n        height: 592,\n        src: episode.thumbnail,\n        objectFit: \"cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: episode.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.members\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.emptyPlayer,\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Selecione um podcast para ouvir\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: !episode ? styles.empty : '',\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.progress,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: convertDurationToTimeString(progress)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.slider,\n          children: episode ? /*#__PURE__*/_jsxDEV(Slider, {\n            max: episode.duration,\n            value: progress,\n            onChange: handleSeek,\n            trackStyle: {\n              backgroundColor: '#04d361'\n            },\n            railStyle: {\n              backgroundColor: '#9f75ff'\n            },\n            handleStyle: {\n              borderColor: '#04d361',\n              borderWidth: 4\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.emptySlider\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: convertDurationToTimeString((_episode$duration = episode === null || episode === void 0 ? void 0 : episode.duration) !== null && _episode$duration !== void 0 ? _episode$duration : 0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), episode && /*#__PURE__*/_jsxDEV(\"audio\", {\n        src: episode.url,\n        ref: audioRef,\n        loop: isLooping,\n        autoPlay: true,\n        onEnded: handleEpisodeEnded,\n        onPlay: function onPlay() {\n          return setPlayingState(true);\n        },\n        onPause: function onPause() {\n          return setPlayingState(false);\n        },\n        onLoadedMetadata: setProgressListener\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.buttons,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: !episode || episodeList.length === 1,\n          onClick: toggleShuffle,\n          className: isShuffling ? styles.isActive : '',\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/shuffle.svg\",\n            alt: \"Aleat\\xF3rio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: playPrevious,\n          type: \"button\",\n          disabled: !episode || !hasPrevious,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/play-previous.svg\",\n            alt: \"Tocar anterior\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: !episode,\n          className: styles.playButton,\n          onClick: togglePlay,\n          children: isPlaying ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/pause.svg\",\n            alt: \"Tocar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/play.svg\",\n            alt: \"Tocar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: playNext,\n          disabled: !episode || !hasNext,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/play-next.svg\",\n            alt: \"Tocar pr\\xF3xima\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: !episode,\n          onClick: toggleLoop,\n          className: isLooping ? styles.isActive : '',\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/repeat.svg\",\n            alt: \"Repetir\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Player, \"BlmBqSHHfxmRUyVj3EChg8ATpd4=\", false, function () {\n  return [usePlayer];\n});\n\n_c = Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["/home/erick/fsociety00.dat/nlw5/Podcastr/src/components/Player/index.tsx"],"names":["Image","useEffect","useRef","useState","usePlayer","styles","Slider","convertDurationToTimeString","Player","audioRef","progress","setProgress","episodeList","currentEpisodeIndex","isPlaying","isLooping","isShuffling","toggleShuffle","togglePlay","toggleLoop","setPlayingState","playNext","playPrevious","hasNext","hasPrevious","clearPlayerState","current","play","pause","episode","setProgressListener","currentTime","addEventListener","Math","floor","handleSeek","amount","handleEpisodeEnded","playerContainer","currentEpisode","thumbnail","title","members","emptyPlayer","empty","slider","duration","backgroundColor","borderColor","borderWidth","emptySlider","url","buttons","length","isActive","playButton"],"mappings":"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","sourcesContent":["import Image from 'next/image'\nimport { useEffect, useRef, useState} from 'react'\nimport { usePlayer } from '../../contexts/PlayerContext'\nimport styles from './styles.module.scss'\n\nimport Slider from 'rc-slider'\nimport 'rc-slider/assets/index.css'\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString'\n\nexport function Player() {\n\n  const audioRef = useRef<HTMLAudioElement>(null)\n  const [progress, setProgress] = useState(0)\n\n  \n\n  const { \n    episodeList, \n    currentEpisodeIndex,\n    isPlaying,\n    isLooping,\n    isShuffling,\n    toggleShuffle,\n    togglePlay,\n    toggleLoop,\n    setPlayingState,\n    playNext,\n    playPrevious,\n    hasNext,\n    hasPrevious,\n    clearPlayerState \n     } = usePlayer()\n\n  \n  useEffect( () => {\n    if (!audioRef.current) {\n      return;\n    }\n\n    if (isPlaying) {\n      audioRef.current.play();\n    } else {\n      audioRef.current.pause();\n    }\n\n  }, [isPlaying])\n\n  const episode = episodeList[currentEpisodeIndex]\n\n  function setProgressListener() {\n    audioRef.current.currentTime = 0\n\n    audioRef.current.addEventListener('timeupdate', () => {\n      setProgress(Math.floor(audioRef.current.currentTime))\n    })\n  }\n\n  function handleSeek(amount: number) {\n    audioRef.current.currentTime = amount;\n    setProgress(amount)\n  }\n\n  function handleEpisodeEnded() {\n    if(hasNext){\n      playNext()\n    } else{\n      clearPlayerState()\n    }\n  }\n\n  return (\n    <div className={styles.playerContainer}>\n      <header>\n        <img src=\"/playing.svg\" alt=\"Tocando agora\"/>\n        <strong>Tocando agora</strong>\n      </header>\n\n      { episode ? (\n        <div className={styles.currentEpisode}>\n          <Image \n          width={592}\n          height={592}\n          src={episode.thumbnail}\n          objectFit=\"cover\" />\n\n          <strong>{episode.title}</strong>\n          <span>{episode.members}</span>\n\n        </div>\n      ) : (\n        <div className={styles.emptyPlayer}>\n          <strong>Selecione um podcast para ouvir</strong>\n        </div>\n      ) }\n\n      <footer className={!episode ? styles.empty : ''}>\n\n        <div className={styles.progress}>\n\n          <span>{convertDurationToTimeString(progress)}</span>\n\n          <div className={styles.slider}>\n            { episode ? (\n              <Slider\n                max={episode.duration}\n                value={progress}\n                onChange={handleSeek}\n                trackStyle={{ backgroundColor: '#04d361' }}\n                railStyle={{ backgroundColor: '#9f75ff' }}\n                handleStyle={{ borderColor: '#04d361', borderWidth: 4 }}\n              />\n            ) : (\n              <div className={styles.emptySlider} />\n            ) }\n            \n          </div>\n\n          <span>{convertDurationToTimeString(episode?.duration ?? 0 )}</span>\n\n        </div>\n\n        { episode && (\n          <audio \n          src={episode.url}\n          ref={audioRef}\n          loop={isLooping}\n          autoPlay\n          onEnded={handleEpisodeEnded}\n          onPlay={() => setPlayingState(true)}\n          onPause={() => setPlayingState(false)}\n          onLoadedMetadata={setProgressListener}\n          />\n        )}\n\n        <div className={styles.buttons}>\n          <button\n           type=\"button\"\n           disabled={!episode || episodeList.length === 1 }\n           onClick={toggleShuffle}\n           className={isShuffling ? styles.isActive : ''}\n           >\n            <img src=\"/shuffle.svg\" alt=\"Aleatório\"/>\n          </button>\n\n          <button onClick={playPrevious} type=\"button\" disabled={!episode || !hasPrevious}>\n            <img src=\"/play-previous.svg\" alt=\"Tocar anterior\"/>\n          </button>\n\n          <button\n           type=\"button\"\n           disabled={!episode} \n           className={styles.playButton}\n           onClick={togglePlay}\n           >\n            { isPlaying\n              ? <img src=\"/pause.svg\" alt=\"Tocar\"/>\n              : <img src=\"/play.svg\" alt=\"Tocar\"/>\n               }\n            \n          </button>\n\n          <button type=\"button\" onClick={playNext} disabled={!episode || !hasNext}>\n            <img src=\"/play-next.svg\" alt=\"Tocar próxima\"/>\n          </button>\n\n          <button \n          type=\"button\"\n          disabled={!episode}\n          onClick={toggleLoop}\n          className={isLooping ? styles.isActive : ''}\n          >\n            <img src=\"/repeat.svg\" alt=\"Repetir\"/>\n          </button>\n        </div>\n\n      </footer>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}